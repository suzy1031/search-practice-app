import { NextPage } from 'next'
import Head from 'next/head'
import { useRouter } from 'next/router'
import { useRecoilValue } from 'recoil'
import { genreAtom } from '../../recoil/states'

import { Box, Button, Typography } from '@mui/material'

import AppRoot from '../layout/AppRoot'
import { useEffect } from 'react'
import axios from 'axios'
import { SEARCH_URL } from '../../constants/constants'

const GenrePage: NextPage = () => {
  const router = useRouter()
  const genre = useRecoilValue(genreAtom)!
  console.log(genre)

  useEffect(() => {
    const func = async () => {
      try {
        axios
          .get(`${SEARCH_URL}`, {
            params: {
              genreId: genre.genreId,
              applicationId: process.env.NEXT_PUBLIC_KEY,
            },
          })
          .then((response) => {
            console.log(response)
          })
          .catch((error) => console.log(error))
      } catch (error) {
        console.log(error)
      }
    }

    if (typeof genre !== 'undefined') {
      func()
    } else {
      router.replace('/')
    }
  }, [genre, router])
  return (
    <>
      <Head>
        <title>Search Practice App | ジャンル</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <AppRoot>
        {genre && (
          <>
            <Typography variant="h6">
              {`"${genre.genreName}"`}の検索結果
            </Typography>
            <Box className="my-3 flex justify-center">
              <Button variant="outlined" onClick={() => router.back()}>
                戻る
              </Button>
            </Box>
          </>
        )}
      </AppRoot>
    </>
  )
}
export default GenrePage
